{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "description": "Configuration to load data, apply transformations, and export to one or multiple destinations",
  "type": "object",
  "required": [
    "source"
  ],
  "properties": {
    "exports": {
      "description": "Export destinations for the transformed data",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExportItem"
      }
    },
    "source": {
      "description": "The top-level source that data should be loaded from",
      "allOf": [
        {
          "$ref": "#/definitions/Loader"
        }
      ]
    },
    "transforms": {
      "description": "Transformations to apply to the data loaded from the source",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/TransformItem"
      }
    }
  },
  "definitions": {
    "Alias": {
      "description": "Rename a column using the given alias",
      "type": "string"
    },
    "And": {
      "description": "Chain an expression into a logical AND with conditions on one or more columns",
      "allOf": [
        {
          "$ref": "#/definitions/ColMap"
        }
      ]
    },
    "ColMap": {
      "type": [
        "object",
        "array"
      ],
      "items": {
        "type": "array",
        "items": [
          {
            "$ref": "#/definitions/Column"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OpItem"
            }
          }
        ],
        "maxItems": 2,
        "minItems": 2
      }
    },
    "Column": {
      "description": "Specify a column by name (equivalent to [`polars::prelude::col`])",
      "type": "string"
    },
    "ConfigSource": {
      "description": "Import another configuration as a data source",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "Contains": {
      "description": "Check if column contains the given regex",
      "type": "string"
    },
    "CsvSource": {
      "description": "Load data from CSV",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "has_header": {
          "description": "Whether or not files have headers",
          "type": [
            "boolean",
            "null"
          ]
        },
        "path": {
          "description": "Path to load files from, globs permitted",
          "type": "string"
        },
        "schema": {
          "description": "Optional [`polars::prelude::Schema`]",
          "anyOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "type": "null"
            }
          ]
        },
        "separator": {
          "description": "Separator to use when parsing",
          "anyOf": [
            {
              "$ref": "#/definitions/Separator"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "DropDuplicates": {
      "description": "Filter out duplicate rows",
      "type": "object",
      "properties": {
        "keep": {
          "default": "any",
          "allOf": [
            {
              "$ref": "#/definitions/DuplicateKeep"
            }
          ]
        },
        "subset": {
          "description": "Columns to check for duplicate values (defaults to all columns)",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DuplicateKeep": {
      "description": "Which duplicate rows to keep to keep when dropping duplicates from data",
      "type": "string",
      "enum": [
        "first",
        "last",
        "any",
        "none"
      ]
    },
    "ExportItem": {
      "oneOf": [
        {
          "description": "Export data to CSV",
          "type": "object",
          "required": [
            "folder",
            "name",
            "type"
          ],
          "properties": {
            "date_format": {
              "description": "Optional format string to append the current time to the filename - refer to https://docs.rs/chrono/latest/chrono/format/strftime/index.html for available format codes",
              "type": [
                "string",
                "null"
              ]
            },
            "folder": {
              "description": "Folder in which to create files",
              "type": "string"
            },
            "name": {
              "description": "Name of the output file (not including the file extension)",
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "csv"
              ]
            }
          }
        }
      ]
    },
    "Extract": {
      "description": "Extract capture groups from a regex into separate columns",
      "type": "object",
      "required": [
        "column",
        "pattern"
      ],
      "properties": {
        "column": {
          "type": "string"
        },
        "filter": {
          "default": false,
          "type": "boolean"
        },
        "pattern": {
          "type": "string"
        }
      }
    },
    "ExtractGroups": {
      "description": "Extract all capture groups from a regex into a struct column",
      "type": "string"
    },
    "Filter": {
      "description": "Filter rows using a mapping of columns to operations to apply, which must yield boolean values",
      "allOf": [
        {
          "$ref": "#/definitions/ColMap"
        }
      ]
    },
    "IsNull": {
      "description": "Check if column is null",
      "type": "boolean"
    },
    "Join": {
      "description": "Transform data by joining it with data from another source",
      "type": "object",
      "required": [
        "how",
        "left_on",
        "right",
        "right_on"
      ],
      "properties": {
        "how": {
          "$ref": "#/definitions/JoinType"
        },
        "left_on": {
          "type": "string"
        },
        "right": {
          "$ref": "#/definitions/Loader"
        },
        "right_on": {
          "type": "string"
        }
      }
    },
    "JoinType": {
      "type": "string",
      "enum": [
        "inner",
        "left",
        "right",
        "full"
      ]
    },
    "Loader": {
      "description": "Load data from a source and apply optional transformations",
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "csv"
          ],
          "properties": {
            "csv": {
              "$ref": "#/definitions/CsvSource"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "config"
          ],
          "properties": {
            "config": {
              "$ref": "#/definitions/ConfigSource"
            }
          },
          "additionalProperties": false
        }
      ],
      "properties": {
        "transforms": {
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformItem"
          }
        }
      }
    },
    "OpItem": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "extract_groups"
          ],
          "properties": {
            "extract_groups": {
              "$ref": "#/definitions/ExtractGroups"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "alias"
          ],
          "properties": {
            "alias": {
              "$ref": "#/definitions/Alias"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "contains"
          ],
          "properties": {
            "contains": {
              "$ref": "#/definitions/Contains"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "is_null"
          ],
          "properties": {
            "is_null": {
              "$ref": "#/definitions/IsNull"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "or"
          ],
          "properties": {
            "or": {
              "$ref": "#/definitions/Or"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "and"
          ],
          "properties": {
            "and": {
              "$ref": "#/definitions/And"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Or": {
      "description": "Chain an expression into a logical OR with conditions on one or more columns",
      "allOf": [
        {
          "$ref": "#/definitions/ColMap"
        }
      ]
    },
    "Rename": {
      "description": "Rename columns",
      "oneOf": [
        {
          "description": "Rename using a direct mapping of old names to new",
          "type": "object",
          "required": [
            "map"
          ],
          "properties": {
            "map": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Schema": true,
    "Select": {
      "description": "Select columns with the applied operations. Wraps [`polars::lazy::prelude::LazyFrame::select`]",
      "allOf": [
        {
          "$ref": "#/definitions/ColMap"
        }
      ]
    },
    "Separator": {
      "description": "Any valid ASCII CSV separator",
      "type": "integer",
      "format": "uint8",
      "minimum": 0.0
    },
    "Sort": {
      "description": "Sort a column ascending or descending",
      "type": "object",
      "required": [
        "column"
      ],
      "properties": {
        "column": {
          "type": "string"
        },
        "descending": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "SortBy": {
      "description": "Sort the data by one or more columns",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Sort"
      }
    },
    "TransformItem": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "select"
          ],
          "properties": {
            "select": {
              "$ref": "#/definitions/Select"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "rename"
          ],
          "properties": {
            "rename": {
              "$ref": "#/definitions/Rename"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "filter"
          ],
          "properties": {
            "filter": {
              "$ref": "#/definitions/Filter"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "extract"
          ],
          "properties": {
            "extract": {
              "$ref": "#/definitions/Extract"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "unnest"
          ],
          "properties": {
            "unnest": {
              "$ref": "#/definitions/Unnest"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "sort_by"
          ],
          "properties": {
            "sort_by": {
              "$ref": "#/definitions/SortBy"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "drop_duplicates"
          ],
          "properties": {
            "drop_duplicates": {
              "$ref": "#/definitions/DropDuplicates"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "join"
          ],
          "properties": {
            "join": {
              "$ref": "#/definitions/Join"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Unnest": {
      "description": "Apply [`polars::lazy::prelude::LazyFrame::unnest`] to the given struct columns",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  }
}